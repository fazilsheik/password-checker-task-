1. Testing on Strength Checker Tools

(hypothetical results summarized below):

abc123 – Very weak; cracked in seconds.

Abc12345 – Weak to fair; still vulnerable.

Abc!23#Xy – Fair to good; scores ~“good,” but short.

7uP^zQ9@m1Lb – Strong; maybe a few centuries to crack.

HorsePurpleHatRunBay! – Strong to very strong; long passphrase.

G7!n9Px$r4B_2qZmD5fW – Very strong; excellent complexity/length.

2.Feedback Highlights:

Short passwords (<12) are weak.

Adding uppercase, numbers, symbols boosts complexity.

Length amplifies strength—16+ characters is ideal 

Passphrases (multiple random words) offer strong, memorable structure 


3. Best Practices & Tips from Testing
Use ≥16 characters

Mix uppercase, lowercase, numbers, symbols: required for complexity 


Make passwords unique per account: don’t reuse 


Avoid dictionary words, personal info, patterns .

Passphrases are secure and easier to remember (e.g., “Good HorsePurpleHatRunBay”) 

Password manager: use one to generate/store strong passwords .

4. Common Password Attacks

Brute-force: tries all combinations. Longer passwords exponentially slow it down 

Dictionary attack: uses common words/phrases; vulnerable if you use them .

Rainbow tables / offline hash cracking: uses precomputed tables to reverse hashes; mitigated with salts & KDFs like bcrypt or scrypt 


5. Summary: How Complexity Affects Security

Length is the most critical factor: 8 chars ≈ minutes to crack; 16 chars ≈ billions of years 

Variety: mixing uppercase/lowercase/digits/symbols greatly increases entropy 

Avoidance of words: passphrases with random words fare better against dictionary attacks

Uniqueness: essential to prevent credential stuffing

